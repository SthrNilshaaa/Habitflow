name: Flutter Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      deploy_platform:
        description: 'Platform to deploy to'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - android
          - ios
          - web

env:
  FLUTTER_VERSION: '3.24.5'

jobs:
  version-bump:
    name: Version Bump
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Bump version
      run: |
        # Get current version
        CURRENT_VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
        echo "Current version: $CURRENT_VERSION"
        
        # Parse version components
        IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
        
        # Bump based on release type
        case "${{ github.event.inputs.release_type }}" in
          "major")
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            ;;
          "minor")
            MINOR=$((MINOR + 1))
            PATCH=0
            ;;
          "patch")
            PATCH=$((PATCH + 1))
            ;;
        esac
        
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"
        
        # Update pubspec.yaml
        sed -i "s/version: $CURRENT_VERSION/version: $NEW_VERSION/" pubspec.yaml
        
        # Create git tag
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pubspec.yaml
        git commit -m "Bump version to $NEW_VERSION"
        git tag "v$NEW_VERSION"
        git push origin main
        git push origin "v$NEW_VERSION"

  build-android-release:
    name: Build Android Release
    runs-on: ubuntu-latest
    needs: version-bump
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_platform == 'all' || github.event.inputs.deploy_platform == 'android')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build APK
      run: flutter build apk --release
      
    - name: Build App Bundle
      run: flutter build appbundle --release
      
    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-release
        path: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab

  build-ios-release:
    name: Build iOS Release
    runs-on: macos-latest
    needs: version-bump
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_platform == 'all' || github.event.inputs.deploy_platform == 'ios')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build iOS
      run: flutter build ios --release --no-codesign
      
    - name: Upload iOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-release
        path: build/ios/archive/

  build-web-release:
    name: Build Web Release
    runs-on: ubuntu-latest
    needs: version-bump
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_platform == 'all' || github.event.inputs.deploy_platform == 'web')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Web
      run: flutter build web --release
      
    - name: Upload Web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-release
        path: build/web/

  deploy-firebase:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    needs: build-web-release
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_platform == 'all' || github.event.inputs.deploy_platform == 'web')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Web build
      uses: actions/download-artifact@v4
      with:
        name: web-release
        
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        channelId: live
        projectId: habitflow-app

  deploy-app-store:
    name: Deploy to App Store
    runs-on: macos-latest
    needs: build-ios-release
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_platform == 'all' || github.event.inputs.deploy_platform == 'ios')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download iOS build
      uses: actions/download-artifact@v4
      with:
        name: ios-release
        
    - name: Deploy to App Store Connect
      uses: apple-actions/upload-testflight@v1
      with:
        app-path: build/ios/archive/Runner.xcarchive
        api-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        api-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}

  deploy-play-store:
    name: Deploy to Play Store
    runs-on: ubuntu-latest
    needs: build-android-release
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_platform == 'all' || github.event.inputs.deploy_platform == 'android')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Android build
      uses: actions/download-artifact@v4
      with:
        name: android-release
        
    - name: Deploy to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT }}
        packageName: com.habitflow.app
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: internal

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-android-release, build-ios-release, build-web-release]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-release
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab
        tag_name: ${{ github.ref_name }}
        name: HabitFlow ${{ github.ref_name }}
        body: |
          ## 🚀 HabitFlow ${{ github.ref_name }}
          
          ### 📱 What's New
          
          **Enhanced Features:**
          - Improved notification system with multi-layer reminders
          - Enhanced habit tracking and statistics
          - Modern glassmorphism UI design
          - Better performance and stability
          
          **Bug Fixes:**
          - Fixed notification scheduling issues
          - Improved activity tracking accuracy
          - Resolved UI alignment problems
          - Enhanced data persistence
          
          ### 📦 Downloads
          
          **Android:**
          - [APK File](build/app/outputs/flutter-apk/app-release.apk)
          - [App Bundle](build/app/outputs/bundle/release/app-release.aab)
          
          **iOS:**
          - Available on App Store Connect
          
          **Web:**
          - Deployed to Firebase Hosting
          
          ### 🔧 Installation
          
          **Android:**
          1. Download the APK file
          2. Enable "Install from unknown sources" in settings
          3. Install the APK
          
          **iOS:**
          1. Download from App Store
          2. Or build from source using Xcode
          
          **Web:**
          1. Visit the deployed web version
          2. Add to home screen for app-like experience
          
          ### 📋 System Requirements
          
          - **Android:** API 21+ (Android 5.0+)
          - **iOS:** iOS 12.0+
          - **Web:** Modern browser with JavaScript enabled
          
          ### ✨ Features
          
          - ✅ Smart habit tracking with reminders
          - ✅ Comprehensive statistics and insights
          - ✅ Modern glassmorphism UI design
          - ✅ Multi-platform support
          - ✅ Offline functionality
          - ✅ Secure data persistence
          - ✅ Customizable habit types
          - ✅ Streak tracking and motivation
          
          ### 🐛 Known Issues
          
          - None reported in this release
          
          ### 📞 Support
          
          If you encounter any issues, please:
          1. Check the [FAQ](https://github.com/your-repo/habitflow/wiki/FAQ)
          2. Search [existing issues](https://github.com/your-repo/habitflow/issues)
          3. Create a new issue with detailed information
          
          ### 🤝 Contributing
          
          We welcome contributions! See [CONTRIBUTING.md](CONTRIBUTING.md) for details.
          
          ---
          
          **Made with ❤️ by the HabitFlow Team**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-deployment:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [create-release, deploy-firebase, deploy-app-store, deploy-play-store]
    if: always()
    
    steps:
    - name: Notify on Success
      if: success()
      run: |
        echo "🎉 Deployment completed successfully!"
        echo "Version: ${{ github.ref_name }}"
        echo "Platforms deployed: ${{ github.event.inputs.deploy_platform }}"
        
    - name: Notify on Failure
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Version: ${{ github.ref_name }}"
        echo "Please check the logs for details." 